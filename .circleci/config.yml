version: 2.1

executors:
  default:
    working_directory: ~/articles_app
    docker:
      - image: cimg/ruby:3.2.2
        environment:
          BUNDLER_VERSION: 2.4.12
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: ''
      - image: circleci/mysql:8.0.4
        environment:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      - image: seleniarm/standalone-chromium
        name: chrome

commands:
  setup:
    steps:
      - checkout
      - run:
          name: Update bundler
          command: gem update bundler

      - run:
          name: Which bundler?
          command: bundler -v
      
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-

      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

jobs:
  test:
    executor: default
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 90s

      - run:
          name: Use specific database.yml
          command: mv config/database.yml.ci config/database.yml

      - run:
          name: assets precompile
          command: bundle exec rake assets:precompile

      - run:
          name: Database Setup
          command: |
            bin/rails db:create
            bin/rails db:schema:load --trace

      - run:
          name: Database setup
          command: |
            bundle exec rspec
  deploy:
    executor: default
    environment:
      
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:kWolJ1EpxUqbesj0AavwXmSjtuGEFj6/wYtZczvGNb0"
      - run: mkdir ~/.ssh
      - run: touch ~/.ssh/known_hosts
      - run: ssh-keyscan ${SSH_HOST} >> ~/.ssh/known_hosts
      - run: ssh $SSH_USER@$SSH_HOST "/var/www/articles_app/deploy.sh"

workflows:
  build_and_test:
    jobs:
      - test
      - deploy:
          requires:
            - test
